import unittest

def soma(x, y):
    return x + y


def subtracao(x, y):
    return x - y


class TesteUnitario(unittest.TestCase):
    def teste_soma(self):
        self.assertEqual(7, soma(5, 2))

unittest.main()


.
----------------------------------------------------------------------
Ran 1 test in 0.000s

OK


class TesteUnitario(unittest.TestCase):
    def teste_soma(self):
        self.assertEqual(9, soma(5, 2))



F
======================================================================
FAIL: teste_soma (__main__.TesteUnitario)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "teste.py", line 13, in teste_soma
    self.assertEqual(9, soma(5, 2))
AssertionError: 9 != 7

----------------------------------------------------------------------
Ran 1 test in 0.000s

FAILED (failures=1)

class TesteUnitario(unittest.TestCase):
    def teste_soma(self):
        self.assertEqual(9, soma(5, 2))

    def teste_subtracao(self):
        self.asserrtEqual(10, subtracao(2, 1))

FF
======================================================================
FAIL: teste_soma (__main__.TesteUnitario)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "teste.py", line 13, in teste_soma
    self.assertEqual(9, soma(5, 2))
AssertionError: 9 != 7

======================================================================
FAIL: teste_subtracao (__main__.TesteUnitario)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "teste.py", line 16, in teste_subtracao
    self.assertEqual(10, subtracao(2, 1))
AssertionError: 10 != 1

----------------------------------------------------------------------
Ran 2 tests in 0.000s

FAILED (failures=2)




class TesteUnitario(unittest.TestCase):
    def teste_soma(self):
        self.assertEqual(9, soma(5, 2))

    def teste_subtracao(self):
        self.assertEqual(10, subtracao(2, 1))

    def teste_potencia(self):
        self.assertEqual(21, 3 ** 3)



FFF
======================================================================
FAIL: teste_potencia (__main__.TesteUnitario)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "teste.py", line 19, in teste_potencia
    self.assertEqual(21, 3 ** 3)
AssertionError: 21 != 27

======================================================================
FAIL: teste_soma (__main__.TesteUnitario)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "teste.py", line 13, in teste_soma
    self.assertEqual(9, soma(5, 2))
AssertionError: 9 != 7

======================================================================
FAIL: teste_subtracao (__main__.TesteUnitario)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "teste.py", line 16, in teste_subtracao
    self.assertEqual(10, subtracao(2, 1))
AssertionError: 10 != 1

----------------------------------------------------------------------
Ran 3 tests in 0.000s

FAILED (failures=3)


class TesteUnitario(unittest.TestCase):
    def teste_soma(self):
        self.assertEqual(9, soma(5, 2))

    def teste_subtracao(self):
        self.assertEqual(10, subtracao(2, 1))

    def teste_potencia(self):
        self.assertEqual(27, 3 ** 3)

.FF
======================================================================
FAIL: teste_soma (__main__.TesteUnitario)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "teste.py", line 13, in teste_soma
    self.assertEqual(9, soma(5, 2))
AssertionError: 9 != 7

======================================================================
FAIL: teste_subtracao (__main__.TesteUnitario)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "teste.py", line 16, in teste_subtracao
    self.assertEqual(10, subtracao(2, 1))
AssertionError: 10 != 1

----------------------------------------------------------------------
Ran 3 tests in 0.000s

FAILED (failures=2)

class TesteUnitario(unittest.TestCase):
    def teste_soma(self):
        self.assertEqual(7, soma(5, 2))

    def teste_subtracao(self):
        self.assertEqual(1, subtracao(2, 1))

    def teste_potencia(self):
        self.assertEqual(27, 3 ** 3)

...
----------------------------------------------------------------------
Ran 3 tests in 0.000s

OK

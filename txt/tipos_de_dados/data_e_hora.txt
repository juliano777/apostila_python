Data e Hora


datetime - Módulo que fornece classes para manipular datas e horas de maneiras simples e complexas. Enquanto data e hora são suportados aritmeticamente, o foco da implementação estã em uma extração eficiente de atributo para saída formatada e manipulação.




Importação de tipo e função para os testes a seguir:

> from datetime import datetime
> from sys import getsizeof



Inserir dados via teclado conforme sugere o modelo na mensagem:

> dt_evento = input('Digite a data e hora do evento (AAAA-MM-DD HH:MM): ')

Digite a data e hora do evento (AAAA-MM-DD HH:MM):



Verificando o tipo da variável:

> type(dt_evento)

str



Quanto custa essa variável em bytes?

> getsizeof(dt_evento)

65



    Strings não são adequadas para armazenar data e hora.
    strptime transforma uma string para datetime conforme uma dada máscara:

    strptime: str -> datetime



Converter a string para datetime:

> datetime.strptime(dt_evento, '%Y-%m-%d %H:%M')

datetime.datetime(2018, 12, 21, 12, 15)



O tamanho em bytes do dado em datetime:

> getsizeof(datetime.strptime(dt_evento, '%Y-%m-%d %H:%M'))

48

    A mesma informação armazenada como datetime ocupa menos espaço que string.



Recriar a variável como datetime utilizando seu valor antigo de string:

> dt_evento = datetime.strptime(dt_evento, '%Y-%m-%d %H:%M')



Verificando o tipo:

> type(dt_evento)

datetime.datetime



    Pode ser necessário também fazer o caminho inverso, para transformar um dado datetime para string.
    Para isso podemos usar strftime:

    strftime: datetime -> str



sddssdd:

> datetime.strftime(dt_evento, '%Y-%m-%d %H:%M')

'2018-12-21 12:15'



from datetime import date

hoje = date.today()

print(hoje)
2015-11-11

print(hoje.day)
11

print(hoje.month)
11

print(hoje.year)
2015

hoje.isoformat()
'2015-11-11'


Método toordinal; retorna a quantidade de dias passados desde 01/01/0001.

hoje.toordinal()

735913


Método fromordinal; retorna a data a partir da quantidade de dias passados desde 01/01/0001.

datetime.date.fromordinal(735913)

datetime.date(2015, 11, 11)


Que dia será daqui a 40 dias?

datetime.date.fromordinal(hoje.toordinal() + 40)
datetime.date(2015, 12, 21)

datetime.date.fromordinal(hoje.toordinal() + 40).isoformat()
'2015-12-21'



Método weekday, em que segunda-feira = 0 e domingo = 6:

hoje.weekday()
2


Método isoweekday, em que segunda-feira = 1 e domingo = 7:

hoje.isoweekday()
3




time - Módulo cujos objetos representam uma hora (local) de dia, independente de qualquer dia em particular, e sujeito a ajustes via um objeto tzinfo.
Fornece várias funções para manipular valores de hora. Não confundir com a classe time do módulo datetime.



import time

def espera(tempo):
    time.sleep(tempo)
    print('Passou %s segundos' % (tempo))     


espera(3)
Passou 3 segundos


time.ctime()
'Wed Nov 11 20:26:48 2015'

time.tzname
('BRT', 'BRST')



















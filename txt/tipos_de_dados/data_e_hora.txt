Data e Hora


datetime - Módulo que fornece classes para manipular datas e horas de maneiras simples e complexas. Enquanto data e hora são suportados aritmeticamente, o foco da implementação estã em uma extração eficiente de atributo para saída formatada e manipulação.




Importação de tipo e função para os testes a seguir:

> from datetime import datetime
> from sys import getsizeof



dssd

> dt_evento = input('Digite a data e hora do evento (AAAA-MM-DD HH:MM): ')

Digite a data e hora do evento (AAAA-MM-DD HH:MM): 2015-11-18 09:00





type(dt_evento)
str


strptime: str -> datetime

datetime.strptime(dt_evento, '%Y-%m-%d %H:%M')
datetime.datetime(2015, 11, 18, 9, 0)

type(datetime.strptime(dt_evento, '%Y-%m-%d %H:%M'))
datetime.datetime

sys.getsizeof(dt_evento)
53

sys.getsizeof(datetime.strptime(dt_evento, '%Y-%m-%d %H:%M'))
48

dt_evento = datetime.strptime(dt_evento, '%Y-%m-%d %H:%M')

type(dt_evento)
datetime.datetime


strftime: datetime -> str

datetime.strftime(dt_evento, '%Y-%m-%d %H:%M')
'2015-11-18 09:00'



from datetime import date

hoje = date.today()

print(hoje)
2015-11-11

print(hoje.day)
11

print(hoje.month)
11

print(hoje.year)
2015

hoje.isoformat()
'2015-11-11'


Método toordinal; retorna a quantidade de dias passados desde 01/01/0001.

hoje.toordinal()

735913


Método fromordinal; retorna a data a partir da quantidade de dias passados desde 01/01/0001.

datetime.date.fromordinal(735913)

datetime.date(2015, 11, 11)


Que dia será daqui a 40 dias?

datetime.date.fromordinal(hoje.toordinal() + 40)
datetime.date(2015, 12, 21)

datetime.date.fromordinal(hoje.toordinal() + 40).isoformat()
'2015-12-21'



Método weekday, em que segunda-feira = 0 e domingo = 6:

hoje.weekday()
2


Método isoweekday, em que segunda-feira = 1 e domingo = 7:

hoje.isoweekday()
3




time - Módulo cujos objetos representam uma hora (local) de dia, independente de qualquer dia em particular, e sujeito a ajustes via um objeto tzinfo.
Fornece várias funções para manipular valores de hora. Não confundir com a classe time do módulo datetime.



import time

def espera(tempo):
    time.sleep(tempo)
    print('Passou %s segundos' % (tempo))     


espera(3)
Passou 3 segundos


time.ctime()
'Wed Nov 11 20:26:48 2015'

time.tzname
('BRT', 'BRST')


















